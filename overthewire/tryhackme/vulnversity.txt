                               vulnversity
                           ======================
Learn about active recon, web app attacks and privilege escalation
 
https://tryhackme.com/hacktivities/search
 
https://tryhackme.com/room/vulnversity
 
 
https://github.com/fartaviao/tryhackme-vulnversity/blob/main/Vulnversity.md
    
	walkthrough video (John Hammond)
                       ==============
https://www.youtube.com/watch?v=hvYWCegfEZs&list=PL1H1sBF1VAKUOm3WyiZ-m2Oqwku4Xp6if&index=3

   
    
   

remote ip = 10.10.34.169

nmap -sV 10.10.34.169

Identified open ports:

    21/tcp - FTP (vsftpd 3.0.3)
    22/tcp - SSH (OpenSSH 7.2p2 Ubuntu)
    139, 445/tcp - Samba (SMB service)
    3128/tcp - Squid proxy (3.5.12)
    3333/tcp - Apache HTTP Server (2.4.18 Ubuntu)
	
	you can open the web page in url =  'http://10.10.34.169:3333/'
	
Task 3:    Locating directories using Gobuster
------------------------------
Gobuster is a tool for brute-forcing URIs (directories and files), DNS subdomains, and virtual host names.  

 gobuster dir -u http://IP:3333 -w /usr/share/wordlists/dirbuster/directory-list-1.0.txt

What is the directory that has an upload form page?
Try to open all the paths . you will find the uploa page in the next path:
http://IP:3333/internal/


  

-------------------------------------------
Now that you have found a form to upload files, 
( http:10.10.135.221:3333/internal/ )
we can leverage this to upload and execute our payload, which will lead to compromising the web server.

    Answer the questions below:

    What common file type you'd want to upload to exploit the server is blocked? 

    Logically, the ideal would be to upload a .php file to execute code. Imagine it as a Trojan horse.


    We will fuzz the upload form to identify which extensions are not blocked. To do this, we'll use BurpSuite. We’re going to use Intruder (used to automate custom attacks). To start, make a wordlist with the following extensions:

nano phplist.txt
input the next list:
.php
.php3
.php4
.php5
.phtml

Ctrl + x and then y to save the file.
cat phplist.txt

Search "foxyproxy extension" and add it 

We go into the FoxyProxy options and add a new proxy and click Save.

click : option/proxy/add
Input the next items:

Title: burpsuite
Type: HTTP
Hostname: 127.0.0.1
port: 8080

save 



  run Burpsuite from the terminal  :   burpsuite
Burpsuite will open, chose the temporary project, use the default parameters, and launch it by clicking Start Burp.


on the main manu, go to the Proxy tab, Intercept, and put the option in "Intercept is ON".

https://medium.com/@Z3pH7/tryhackme-vulnversity-write-up-thm-dcd1f6b09fd8


At this point, BurpSuite is intercepting. We can go back to Firefox and select the burpsuite Proxy we previously configured.

goto the upload url http://ip:3333/internal/
Now we can upload the file we’ve created. Click on Submit, and we notice that the page keeps loading because the proxy has intercepted the request. So, we go to BurpSuite to see what has been intercepted.

We obtain the HTML request information in text format. Additionally, we can see the file we’re trying to upload to the target machine, with the plain text content showing the different extensions included in our file phplist.txt
https://kalilinuxtutorials.com/burpsuite/