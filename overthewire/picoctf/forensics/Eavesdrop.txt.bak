
                               Eavesdrop   
					 --------------------------------------		  
                         

problem URL: 
https://play.picoctf.org/practice/challenge/264
https://www.youtube.com/watch?v=Sb5PS-DddXY&list=PL1H1sBF1VAKUbRWMCzEBi61Z_7um7V5Sd&index=46


https://tzion0.github.io/ctf/picoctf-for/
https://github.com/KathleenX7/PicoCTF-2022-Writeup/blob/main/Forensics/Eavesdrop/README.md
https://medium.com/@kautsar.muwahhid/picoctf-write-up-eavesdrop-a26aeaa4b9cc


Description
  Download this packet capture :
           'https://artifacts.picoctf.net/c/135/capture.flag.pcap'
  and find the flag
 
Hints:
  All we know is that this packet capture includes a chat conversation 
  and a file transfer.
  
 
Solution:
  1. wget   https://artifacts.picoctf.net/c/135/capture.flag.pcap
  2. file  capture.flag.pcap
     output:
    	capture.flag.pcap: pcap capture file, microsecond ts (little-endian) - version 2.4 
	    (Ethernet, capture length 262144)

  3. strings capture.flag.pcap
     output:
        among the mant lines next one is interesting 
	      '*sigh* openssl des3 -d -salt -in file.des3 -out file.txt -k supersecretpassword123'
	   note:
	      3DES is an encryption  a symmetric-key algorithm both for encryption and decryption. 
	
	 The next lines in the ouput are importent too.
	    a. 'gCould you transfer the file to me again?'
        b. 'Oh great. Ok, over 9002?'
		
  4. start wireshark 
	     wireshark capture.flag.pcap
	 you can do the process in stage 2 by  right click on the TCP line and chose Flow.	
	 On port 9001, there's conversations happening in the TCP stream so right click,
	 Follow > TCP Stream for one of the packets on port 9001:
	  Output:
	        --------------------------------------------
			Hey, how do you decrypt this file again?
			You're serious?
			Yeah, I'm serious
			*sigh* openssl des3 -d -salt -in file.des3 -out file.txt -k supersecretpassword123
			Ok, great, thanks.
			Let's use Discord next time, it's more secure.
			C'mon, no one knows we use this program like this!
			Whatever.
			Hey.
			Yeah?
			Could you transfer the file to me again?
			Oh great. Ok, over 9002?
			Yeah, listening.
			Sent it
			Got it.
			You're unbelievable
            ------------------------------------------------
			
5. By increasing the TCP Stream to 2,( in the url window write 'tcp.stream eq 2')
    we can see a stream starting with Salted_			
	'Salted__<K&....,J.......o..%....I{97X...........'		
			
6. After that, change the value of field Show and save data as to raw, 
    then click Save as	and chose the file name	'fil.des3'	
			
7. Next, apply the command we noted down before to decrypt the file we saved just now:			
	 openssl des3 -d -salt -in fil.des3 -out file.txt -k supersecretpassword123		
8. more file.txt			
	output 	  picoCTF{nc_73115_411_0ee7267a}	
	
	
	--------------------------------------------------------------------------------------
	
	
	
  5. 
    Since   there weren't any files to export from this packet capture.
    maybe the file transfer doesn't have to be through the network and since this is
		a forensics challenge, the file might just be within the packet capture file.
     run binwalk capture.flag.pcap got:

		DECIMAL       HEXADECIMAL     DESCRIPTION
       ----------------------------------------------- 
       0             0x0             Libpcap capture file, little-endian, version 2.4, Ethernet,  snaplen: 262144
      5882          0x16FA          OpenSSL encryption, salted, salt: 0x3C4B26E8B8F91E2C

   6. meaning there is indeed another file hidden inside. 
      run 'binwalk --dd=".*" capture.flag.pcap' to extract the files, 
      renamed the OpenSSL file to file.des3

    change the name of the file '_capture.flag.pcap-0'  to  'file.des3'
	mv _capture.flag.pcap-0.extracted file.des3
	
	
    copy the 'openssl des3 -d -salt -in file.des3 -out file.txt -k supersecretpassword123'
     and run it in a new teminal.
	  
  ===============================
   
}
   
 
  
 
 
	
	  


