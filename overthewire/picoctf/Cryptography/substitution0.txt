
                            substitution0
                          =====================

problem URL: 

https://play.picoctf.org/practice/challenge/307
https://www.youtube.com/watch?v=nS6nkYkcGeY&list=PL1H1sBF1VAKUbRWMCzEBi61Z_7um7V5Sd&index=24

https://github.com/Cajac/picoCTF-Writeups/blob/main/picoCTF_2022/Cryptography/substitution0.md


Description:
 A message has come in but it seems to be all scrambled. Luckily it 
 seems to have the key at the beginning. 
 Can you crack this substitution cipher? Download the message here:
  https://artifacts.picoctf.net/c/154/message.txt
 
Hints
 Try a frequency attack. An online tool might help.
  This is the message.
 The message we were given looks like this

QWITJSYHXCNDFERMUKGOPVALBZ 

Hjkjpmre Djykqet qkrgj, axoh q ykqvj qet goqojdb qxk, qet wkrpyho fj ohj wjjodj
skrf q ydqgg iqgj xe ahxih xo aqg jeidrgjt. Xo aqg q wjqpoxspd giqkqwqjpg, qet, qo
ohqo oxfj, penerae or eqopkqdxgog—rs irpkgj q ykjqo mkxzj xe q gixjeoxsxi mrxeo
rs vxja. Ohjkj ajkj oar krpet wdqin gmrog ejqk rej jlokjfxob rs ohj wqin, qet q
drey rej ejqk ohj rohjk. Ohj giqdjg ajkj jlijjtxeydb hqkt qet ydrggb, axoh qdd ohj
qmmjqkqeij rs wpkexghjt yrdt. Ohj ajxyho rs ohj xegjio aqg vjkb kjfqknqwdj, qet,
oqnxey qdd ohxeyg xeor iregxtjkqoxre, X irpdt hqktdb wdqfj Cpmxojk srk hxg rmxexre
kjgmjioxey xo.

Ohj sdqy xg: mxirIOS{5PW5717P710E_3V0DP710E_03055505}

 Solution:
    The description conveniently tells as that the first line is a decryption
	key.
    So 'Q' decrypts to 'A', 'W' to 'B', etc.

Then we have a body of text, large enough for us to use letter frequency 
analysis should we need to.
And at the last line we have what looks like our encrypted flag.

Here are two solutions.
    1.As suggested in the hint we can use an online tool such as 
	    https://www.dcode.fr/monoalphabetic-substitution 
	 
     Input the entire message in the Puzzle text field and press Decrypt
	  
     After a short while, you have the flag at the top of the possible 
	  solutions.
	
	2.Python solution
	
      There is no need to use frequency analysis or brute force since we
	  have the key on the first line.

     #!/usr/bin/python
     # -*- coding: latin-1 -*-
     import string

     encrypted_msg = """Hjkjpmre Djykqet qkrgj, axoh q ykqvj qet goqojdb qxk, qet wkrpyho fj ohj wjjodj
     skrf q ydqgg iqgj xe ahxih xo aqg jeidrgjt. Xo aqg q wjqpoxspd giqkqwqjpg, qet, qo
     ohqo oxfj, penerae or eqopkqdxgog—rs irpkgj q ykjqo mkxzj xe q gixjeoxsxi mrxeo
     rs vxja. Ohjkj ajkj oar krpet wdqin gmrog ejqk rej jlokjfxob rs ohj wqin, qet q
     drey rej ejqk ohj rohjk. Ohj giqdjg ajkj jlijjtxeydb hqkt qet ydrggb, axoh qdd ohj
     qmmjqkqeij rs wpkexghjt yrdt. Ohj ajxyho rs ohj xegjio aqg vjkb kjfqknqwdj, qet,
     oqnxey qdd ohxeyg xeor iregxtjkqoxre, X irpdt hqktdb wdqfj Cpmxojk srk hxg rmxexre
     kjgmjioxey xo.

     Ohj sdqy xg: mxirIOS{5PW5717P710E_3V0DP710E_03055505}"""

     key = "QWITJSYHXCNDFERMUKGOPVALBZ"
     alphabet = string.ascii_uppercase

     decrypted_msg = ""
     for c in encrypted_msg:
        if c.isupper():
           decrypted_msg += alphabet[key.index(c)]
        elif c.islower():
          decrypted_msg += alphabet[key.index(c.upper())].lower()
        else:
          decrypted_msg += c

     print(decrypted_msg)
	
	  
  PICOCTF{5UB5717U710N_3V0LU710N_357BF9FF}

