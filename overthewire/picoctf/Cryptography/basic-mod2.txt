
                       basic-mod2   
                     =====================

problem URL: 
https://play.picoctf.org/practice/challenge/254?originalEvent=70&page=1&search=basic-mod2

https://www.youtube.com/watch?v=KqoIlojTrmw&list=PL1H1sBF1VAKUbRWMCzEBi61Z_7um7V5Sd&index=3

 
Description
A new modular challenge! Download the message here:
         https://artifacts.picoctf.net/c/178/message.txt.

 Take each number mod 41 and find the modular inverse for the result. 
 Then map to the following character set: 
  a. 1-26 are the alphabet, 
  b. 27-36 are the decimal digits,  
  c. 37 is an underscore. 
  
  Wrap your decrypted message
 in the picoCTF flag format (i.e. picoCTF{decrypted_message})
  
  
  
  
 Hints:
  1. The inverse modulo z of x is the number, y that when multiplied by x 
      is 1 modulo z   y*x = 1 mod z
  2. It's recommended to use a tool to find the modular inverses
  
  
  A modular inverse of integer a is an integer x such   
  the remainder after dividing ax by the integer m is 1.
  ax mod m = 1
  
  example:
  What is the modular inverse of (3 mod 7)?
   5 is the modular inverse of 3 mod 7, since ( 5*3) mod 7 = 1
  
   What is the modular inverse of (2 mod 6)?
     There is no modular inverse of (2 mod 6) because there is no integer m such that
     m*2 mod 6 =1 
  
Solutions :



python pogram 


import string
letters = string.ascii_uppercase  #  ABC...Z 
dgt = string.digits              #  0..9

flag = "picoCTF{"
contents ="432 331 192 108 180 50 231 188 105 51 364 168 344 195 297 342 292 198 448 62 236 342 63"

  
numbers = contents.split(" ")
numbers = [int(val, 10) for val in numbers]

for number in numbers:
    modulus = number % 41
    print(modulus)
    
    
flag +="}"
print(flag)   


'''
if modulus in range (26):# 0 to  25
    flag += letters[modulus]
elif  modulus in range (26, 36):# 26 to  35
    flag += dgt[modulus % 26]# 0 is 26 1 is 27 ...
else:     #this is an under score
   flag += '_'  
    '''